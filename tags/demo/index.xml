<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>demo on David Buckley</title>
    <link>https://davidbuckley.ca/tags/demo/</link>
    <description>Recent content in demo on David Buckley</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 10 Oct 2020 10:28:16 -0400</lastBuildDate><atom:link href="https://davidbuckley.ca/tags/demo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>StackSort</title>
      <link>https://davidbuckley.ca/post/stacksort/</link>
      <pubDate>Sat, 10 Oct 2020 10:28:16 -0400</pubDate>
      
      <guid>https://davidbuckley.ca/post/stacksort/</guid>
      <description>Running arbitrary untrusted code is a bad idea, use your head.   You can find the source for stacksort here.
Background This project was inspired by the XKCD comic Ineffective Sorts and the similar project by Gregory Koberger, stacksort.
 StackSort connects to StackOverflow, searches for &amp;lsquo;sort a list&amp;rsquo;, and downloads and runs code snippets until the list is sorted. &amp;mdash; Randall Munroe  I wanted to be able to download and run code from StackOverflow the same way I would use any normal Python package.</description>
    </item>
    
    <item>
      <title>Building Images with one pixel for every RGB colour</title>
      <link>https://davidbuckley.ca/post/colour-sort/</link>
      <pubDate>Wed, 24 Jun 2020 17:52:44 -0400</pubDate>
      
      <guid>https://davidbuckley.ca/post/colour-sort/</guid>
      <description>What is an allRGB image? I first encountered the concept when I stumbled across allrgb.com.
 The objective of allRGB is simple: To create images with one pixel for every RGB color (16,777,216); not one color missing, and not one color twice.  As I assume would be the case for most developers, after the idea was presented to me I started to contemplate how I might go about transforming an image such that it meets that criteria but remains recognizable.</description>
    </item>
    
    <item>
      <title>String Interpolation and SQL</title>
      <link>https://davidbuckley.ca/post/string-interpolation-and-sql/</link>
      <pubDate>Fri, 19 Jun 2020 19:52:43 -0400</pubDate>
      
      <guid>https://davidbuckley.ca/post/string-interpolation-and-sql/</guid>
      <description>Background    Don&#39;t use any code I provide or link to in production without giving it a serious think.   SQL injection sucks, right? I&amp;rsquo;m not going to talk about it too much because firstly you already know, and secondly you can go somewhere else for a much better explanation.
# This is vulnerable to an SQL injection attack cursor.execute(f&amp;quot;SELECT * FROM users WHERE id = {id}&amp;quot;) # This is not, but it is much less natural cursor.</description>
    </item>
    
  </channel>
</rss>
